// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String
  role      Role     @default(STUDENT)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  teacherClasses Class[] @relation("TeacherClasses")
  studentClasses Class[] @relation("StudentClasses")
}

model Course {
  id          String   @id @default(uuid())
  code        String   @unique
  name        String
  description String?
  creditHours Int      @default(3)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  classes Class[]
}

model Class {
  id        String   @id @default(uuid())
  name      String
  section   String
  capacity  Int
  courseId  String
  course    Course   @relation(fields: [courseId], references: [id])
  teacherId String
  teacher   User     @relation("TeacherClasses", fields: [teacherId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  students  User[]     @relation("StudentClasses")
  schedules Schedule[]
}

model Room {
  id        String   @id @default(uuid())
  name      String   @unique
  building  String
  capacity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  schedules Schedule[]
}

model Schedule {
  id        String    @id @default(uuid())
  classId   String
  class     Class     @relation(fields: [classId], references: [id])
  roomId    String
  room      Room      @relation(fields: [roomId], references: [id])
  dayOfWeek DayOfWeek
  startTime String // Store as HH:MM format
  endTime   String // Store as HH:MM format
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@unique([roomId, dayOfWeek, startTime, endTime])
  @@unique([classId, dayOfWeek, startTime])
}

enum Role {
  ADMIN
  TEACHER
  STUDENT
}

enum DayOfWeek {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
}
